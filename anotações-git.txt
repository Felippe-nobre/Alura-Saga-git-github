git status: Serve para verificar quais arquivos foram modificados

git add: Serve para adicionar mudanças -> git add . | ou git add "aqui você coloca o nome do arquivo que você quer enviar a mudanças

git commit: Serve para registar as mudanças no repositorio -> git commit -m ""

git push: Serve para subir as mudanças para o repositorio -> git push origin main

git pull: Serve para baixar as mudanças para o repositorio local -> git pull origin main

git log: Serve para ver o historico de commit do nosso repositorio -> git log (nesse metodo aprece a linha do tempo de commits detalhadas) | git log --oneline (nesse metodo podemos ver o historico dos commits mais resumidos) | git log -p (O comando git log -pexibe o histórico de commits juntamente com as diferenças (diffs) de cada commit. Aqui está um detalhamento do que ele faz: )   

git clone: Serve para baixar uma cópia de um repositório hospedado no GitHub para o seu computador

git remote: Serve para visualizar os repositórios remotos linkados com o repositório local

git reverte: Serve para voltar uma alteração realizada no codigo 

git --amend: Serve para modificar o último commit efetuado, alterando sua mensagem ou modificações no código -> git commit --amend -m "sua mensagem nova"

gitiginore: Serve para que podemos esconder alguns arquivo espesfico para, que outras pessoas não vejam, pois pode ser alguma senha e precisamos guardar essa informação

git show: Conhecemos o comando git show, que nos exibe os detalhes de um commit específico;

git diff: Utilizamos o comando git diff para visualizar as diferenças entre dois pontos no histórico de nosso repositório git.

git stash:
Apply
O comando git stash apply espera um índice de um item na stash e o aplica ao repositório, porém, esse comando não remove o item da stash, ou seja, se após executar o comando git stash apply 1 você executar git stash list, o item referente ao índice 1 continuará na stash.

Pop
O git stash pop faz exatamente a mesma coisa que o git stash apply, porém, além de aplicar o item da stash, ele também o remove de lá. Esse comando, sem nenhum parâmetro extra, vai aplicar o último item adicionado à stash, mas nós também podemos informar um índice para ele, como git stash pop 1.

Drop
O git stash drop funciona exatamente como o pop, mas com uma simples diferença: ele apenas remove o item da stash, sem aplicá-lo em nosso repositório. Dessa forma, git stash drop remove o último item adicionado à stash, enquanto o git stash drop 1 remove da stash o item com índice 1.

git blame: Serve para mostar todo o historico de commits do codigo, sendo util para podemos pedir ajuda caso não entedemos detreminada funcionalidade do codigo

git cherry-pick: Vimos como podemos aplicar a nossa branch atual a algum commit vindo de outra branch sem a necessidade de rebase complicados ou técnicas avançadas, simplesmente utilizando o git cherry-pick;